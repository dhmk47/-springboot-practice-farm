<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.springboot.farm.springbootpractice.domain.user.UserRepository">
  	<insert id="insertUser" parameterType="com.springboot.farm.springbootpractice.domain.entity.User"
  	useGeneratedKeys="true" keyProperty="usercode">
  		insert into
  			user_mst
  		values(
  			0,
  			#{name},
  			#{username},
	  		#{oauth2_id},
  			#{password},
  			#{email},
  			#{roles},
  			now(),
  			now()
  		)
  	</insert>
  	
  	<select id="getUserByUsername" parameterType="String" resultType="com.springboot.farm.springbootpractice.domain.entity.User">
  		select
  			um.usercode,
  			um.name,
  			um.username,
  			um.oauth2_id,
  			um.password,
  			um.email,
  			um.roles,
  			ud.money,
  			ud.phone
  		from
  			user_mst um
  			left outer join user_dtl ud on(ud.usercode = um.usercode)
  		where
  			um.username = #{username}
  	</select>
  	
  	<select id="getUserByOAuth2Id" parameterType="String" resultType="com.springboot.farm.springbootpractice.domain.entity.User">
  		select
  			um.usercode,
  			um.name,
  			um.username,
  			um.oauth2_id,
  			um.password,
  			um.email,
  			um.roles,
  			ud.money,
  			ud.phone
  		from
  			user_mst um
  			left outer join user_dtl ud on(ud.usercode = um.usercode)
  		where
  			um.oauth2_id = #{oauth2_id}
  	</select>
  	
  	<select id="getAllUser" resultType="com.springboot.farm.springbootpractice.domain.entity.User">
  		select
  			usercode
  		from
  			user_mst
  	</select>
  	
  	<update id="updateUserPhone" parameterType="com.springboot.farm.springbootpractice.domain.entity.User">
  		update
  			user_dtl
  		set
  			phone = #{phone}
  		where
  			usercode = #{usercode}
  	</update>
  	
  	<update id="updateUserMoney" parameterType="HashMap">
  		update
  			user_dtl
  		set
  			<choose>
  				<when test='type.equals("reward")'>
  					money = money + #{money}
  				</when>
  				<otherwise>
		  			money = #{money}
  				</otherwise>
  			</choose>
  			,
  			update_date = now()
  		where
  			usercode = #{userCode}
  	</update>
  </mapper>