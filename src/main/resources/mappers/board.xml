<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.springboot.farm.springbootpractice.domain.board.BoardRepository">
  	<insert id="save" parameterType="com.springboot.farm.springbootpractice.domain.entity.Board"
  	useGeneratedKeys="true" keyProperty="board_code">
  		insert into
  			board_mst
  		values(
  			0,
  			#{board_title},
  			#{board_content},
  			#{user_code},
  			#{board_type},
  			#{importance_flag},
  			now(),
  			now()
  		)
  	</insert>
  	
  	<select id="getBoardList" parameterType="HashMap" resultType="com.springboot.farm.springbootpractice.domain.entity.Board">
  		select
  			bm.board_code,
			bm.board_title,
			bm.board_content,
			bm.user_code,
			bm.board_type,
			bm.importance_flag,
			
			um.name,
				
			COUNT(rm.reply) AS total_reply,
			
			bd.views,
			<if test="boardPage == true">
				bm2.total_count,
			</if>
			
			bm.create_date,
			bm.update_date
  		FROM
			board_mst bm
			left outer join user_mst um on (um.usercode = bm.user_code)
			LEFT OUTER JOIN reply_mst rm ON (rm.board_code = bm.board_code)
			left outer join board_dtl bd on (bd.board_code = bm.board_code)
			<if test="boardPage == true">
				LEFT OUTER JOIN (select
												COUNT(board_code) AS total_count
											FROM
												board_mst
											where
												board_type = #{type}) bm2 ON (1 = 1)
  		where
			<choose>
				<when test='type == 1'>
					board_type = 1
				</when>
				<when test='type == 2'>
					board_type = 2
				</when>
				<when test='type == 3'>
					board_type = 3
				</when>
			</choose>
			</if>
		GROUP BY
			board_code
		ORDER BY
			importance_flag desc,
			board_code desc
		limit #{page},  #{totalCount}
  	</select>
  	
  	<select id="getBoardByBoardCode" parameterType="Integer" resultType="com.springboot.farm.springbootpractice.domain.entity.Board">
  		select
  			bm.board_code,
			bm.board_title,
			bm.board_content,
			bm.user_code,
			bm.board_type,
			bm.importance_flag,
			
			um.name,
			
			bd.views,
			
			bm.create_date,
			bm.update_date
		from
			board_mst bm
			left outer join user_mst um on (um.usercode = bm.user_code)
			left outer join board_dtl bd on (bd.board_code = bm.board_code)
		where
			bm.board_code = #{board_code}
			and board_type = #{board_type}
  	</select>
  	<update id="updateBoardByBoardCode" parameterType="com.springboot.farm.springbootpractice.domain.entity.Board">
  		update
  			board_mst
  		set
  			board_title = #{board_title},
  			board_content = #{board_content},
  			importance_flag = #{importance_flag},
  			update_date = now()
  		where
  			board_code = #{board_code}
  	</update>
  	<update id="updateBoardViewCount" parameterType="Integer">
  		update
  			board_dtl
  		set
  			views = views + 1
  		where
  			board_code = #{board_code}
  	</update>
  	<delete id="delete" parameterType="Integer">
  		delete
  		from
  			board_mst
  		where
  			board_code = #{board_code}
  	</delete>
  </mapper>